% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ez_track.R
\name{ez_track}
\alias{ez_track}
\title{Create a Clean Tracking Object}
\usage{
ez_track(
  path,
  format = NULL,
  tz = "UTC",
  crs = 4326,
  as_sf = TRUE,
  id_col = NULL,
  time_col = NULL,
  x_col = NULL,
  y_col = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{path}{Either a path to a tracking data file (CSV, Excel, Movebank), or a data.frame-like object.}

\item{format}{Optional. File format: "csv", "xlsx", or "movebank". If NULL, inferred from file extension.}

\item{tz}{Timezone for timestamps. Default is "UTC".}

\item{crs}{EPSG code or proj4string of the input CRS. Default is 4326 (WGS84).}

\item{as_sf}{Logical. Should the result be returned as an `sf` object? Default is TRUE.}

\item{id_col}{Name of the column to use as ID. If NULL, guessed automatically.}

\item{time_col}{Name of the timestamp column. If NULL, guessed automatically.}

\item{x_col}{Name of the longitude/X column. If NULL, guessed automatically.}

\item{y_col}{Name of the latitude/Y column. If NULL, guessed automatically.}

\item{verbose}{Logical. If TRUE, print details during import. Default is TRUE.}

\item{...}{Additional arguments passed to the read function.}
}
\value{
A data.frame or `sf` object with columns `id`, `timestamp`, `x`, and `y`, optionally with spatial geometry.
}
\description{
This function imports and standardizes tracking data into a tidy format with `id`, `timestamp`, `x`, and `y`.
If requested, it converts the result to a spatial object using WGS84 (EPSG:4326).
}
