% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ez_track.R
\name{ez_track}
\alias{ez_track}
\title{Create a Clean Tracking Object}
\usage{
ez_track(
  data,
  format = NULL,
  tz = "UTC",
  crs = 4326,
  as_sf = TRUE,
  id = NULL,
  timestamp = NULL,
  x = NULL,
  y = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{data}{A tracking dataset or file path. Accepted types: `data.frame`, `sf`, `Spatial*`, or a path to CSV, XLSX, SHP, GPKG, or GeoJSON.}

\item{format}{Optional. File format to override detection. Choices: "csv", "xlsx", "shp", "gpkg", "geojson".}

\item{tz}{Timezone for timestamps. Default is "UTC".}

\item{crs}{EPSG code or proj4string of the input CRS. Default is 4326 (WGS84).}

\item{as_sf}{Logical. Should the result be returned as an `sf` object? Default is TRUE.}

\item{id}{Column name for individual identifier. If NULL, guessed automatically.}

\item{timestamp}{Column name for timestamp. If NULL, guessed automatically.}

\item{x}{Column name for longitude/X coordinate. If NULL, guessed automatically.}

\item{y}{Column name for latitude/Y coordinate. If NULL, guessed automatically.}

\item{verbose}{Logical. If TRUE, print details during import. Default is TRUE.}

\item{...}{Additional arguments passed to the read function.}
}
\value{
A data.frame or `sf` object with standardized columns `id`, `timestamp`, `x`, and `y`. Missing values and duplicate (id, timestamp) rows are removed.
}
\description{
This function imports and standardizes tracking data into a tidy format with columns: `id`, `timestamp`, `x`, and `y`.
It supports common input formats including data frames, `sf` and `Spatial` objects, or file paths to CSV, Excel, Shapefiles, GeoPackages, and GeoJSON.
Optionally returns a spatial object projected to WGS84 (EPSG:4326).
}
