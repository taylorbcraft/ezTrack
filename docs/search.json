[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Taylor Craft Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started","text":"vignette demonstrates full workflow using ezTrack. imports tracking data non-standard column names, cleans, standardizes, converts Spatial Feature, computes summary table tracking data, plots tracks home ranges interactive map, plots latitudes time.","code":""},{"path":"/articles/getting-started.html","id":"format-tracking-data","dir":"Articles","previous_headings":"","what":"1. Format Tracking Data","title":"Getting Started","text":"pass dataset GPS-tagged migratory shorebirds ez_track(). column names aren’t provided, ez_track() automatically attempt guess columns correspond ID, timestamp, longitude, latitude. automatic column guessing fails guesses incorrectly, can manually specify columns represent ID, timestamp, longitude, latitude.","code":"data(godwit_tracks) head(godwit_tracks) #>      individual.local.identifier           timestamp location.long location.lat #> 3935                     animal1 2024-12-31 16:00:00     -15.84644     16.33822 #> 3936                     animal1 2024-12-31 20:00:00     -15.82790     16.38281 #> 3937                     animal1 2024-12-31 22:00:00     -15.82829     16.38226 #> 3938                     animal1 2025-01-01 00:00:00     -15.82715     16.38327 #> 3939                     animal1 2025-01-01 04:00:00     -15.82761     16.38304 #> 3940                     animal1 2025-01-01 10:00:00     -15.84629     16.32770  tracks <- ez_track(   data = godwit_tracks,   as_sf = TRUE ) #> Columns detected: #> id: individual.local.identifier #> time: timestamp #> x: location.long #> y: location.lat #> Removed 852 row(s) with missing values.  tracks_manual <- ez_track(   data = godwit_tracks,   as_sf = TRUE,   id_col = 'individual.local.identifier',   time_col = 'timestamp',   x_col = 'location.long',   y_col = 'location.lat', ) #> Columns detected: #> id: individual.local.identifier #> time: timestamp #> x: location.long #> y: location.lat #> Removed 852 row(s) with missing values."},{"path":"/articles/getting-started.html","id":"tracking-data-summary-reports","dir":"Articles","previous_headings":"","what":"2. Tracking Data Summary Reports","title":"Getting Started","text":"Summary statistics can computed individual using ez_summary(). easy use reports presentations, HTML reports can generated using report = TRUE. Summaries can also filtered date using startDate endDate arguments. following summary statistics returned unique id: n_fixes: Number location records first_location: Timestamp first recorded location last_location: Timestamp last recorded location tracking_duration_days: Duration first last fix (days) fixes_per_day: Average number fixes per day median_interval_hours: Median interval fixes (hours) max_time_gap_days: Longest time gap consecutive fixes (days) distance_km: Total distance traveled (kilometers), calculated using Haversine formula avg_speed_kmh: Average speed (km/h), computed distance divided tracking duration hours","code":"summary_table <- ez_summary(tracks) summary_table #>        id n_fixes      first_location       last_location #> 1 animal1    1095 2024-12-31 16:00:00 2025-04-25 14:00:00 #> 2 animal2    1153 2024-12-31 16:00:00 2025-04-27 22:00:00 #> 3 animal3    1022 2024-12-31 16:00:00 2025-04-23 16:00:00 #> 4 animal4     214 2024-12-31 16:00:00 2025-04-27 16:00:00 #> 5 animal5     223 2024-12-31 16:00:00 2025-04-27 16:00:00 #> 6 animal6     551 2024-12-31 16:00:00 2025-04-27 16:00:00 #>   tracking_duration_days fixes_per_day median_interval_hours max_time_gap_days #> 1                 114.92          9.53                     2              0.33 #> 2                 117.25          9.83                     2              1.00 #> 3                 113.00          9.04                     2              1.00 #> 4                 117.00          1.83                     6             10.00 #> 5                 117.00          1.91                     6             13.38 #> 6                 117.00          4.71                     4              1.00 #>   distance_km avg_speed_kmh #> 1     5649.19          2.05 #> 2     5495.39          1.95 #> 3     6370.80          2.35 #> 4     2414.07          0.86 #> 5     2372.16          0.84 #> 6     5438.92          1.94"},{"path":"/articles/getting-started.html","id":"visualize-tracks-on-an-interactive-map","dir":"Articles","previous_headings":"","what":"3. Visualize Tracks on an Interactive Map","title":"Getting Started","text":"can display movement tracks using interactive Leaflet map ez_map() simple command. well date range filters.","code":"ez_map(tracks) ez_map(tracks,   startDate = \"2025-04-10\",   endDate = \"2025-04-28\")"},{"path":"/articles/getting-started.html","id":"estimate-home-ranges","dir":"Articles","previous_headings":"","what":"4. Estimate Home Ranges","title":"Getting Started","text":"Individual population-level Minimum Convex Polygons (MCP) Kernel Density Estimate (KDE) home ranges can created ez_home_range(). result sf object containing one home range polygon per tracked individual population (population = TRUE). Home ranges can vizualised ez_map:","code":"home_ranges_mcp <- ez_home_range(tracks, method = 'mcp', level = 95, startDate = '2025-04-12') #> Registered S3 methods overwritten by 'adehabitatMA': #>   method                       from #>   print.SpatialPixelsDataFrame sp   #>   print.SpatialPixels          sp ez_map(home_ranges_mcp, homeRangeColor = 'id')"},{"path":"/articles/getting-started.html","id":"visualize-latitude-over-time","dir":"Articles","previous_headings":"","what":"5. Visualize Latitude Over Time","title":"Getting Started","text":"ez_latitude_plot() can used visualize latitudinal movement (north-south) time tracked animal.  plot supports: Optional faceting individual Date axis customization Date range filtering ggplot2 parameters customization.","code":"ez_latitude_plot(tracks) ez_latitude_plot(   tracks,   facet = TRUE,   startDate = \"2025-01-01\",   endDate = \"2025-04-28\",   date_breaks = \"1 month\",   date_format = \"%b\" ) +   ggplot2::theme(   text = ggplot2::element_text(size = 18),   axis.title = ggplot2::element_text(size = 20),   axis.text = ggplot2::element_text(size = 18), )"},{"path":[]},{"path":"/articles/getting-started.html","id":"to-update-vignette-pkgdown-site","dir":"Articles","previous_headings":"","what":"To update vignette pkgdown site:","title":"Getting Started","text":"pkgdown::build_site()","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Taylor Craft. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Craft T (2025). ezTrack: Easy Tools Exploring Animal Tracking Data. R package version 0.1.0, https://github.com/taylorbcraft/ezTrack.","code":"@Manual{,   title = {ezTrack: Easy Tools for Exploring Animal Tracking Data},   author = {Taylor Craft},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/taylorbcraft/ezTrack}, }"},{"path":"/index.html","id":"eztrack","dir":"","previous_headings":"","what":"Easy Tools for Exploring Animal Tracking Data","title":"Easy Tools for Exploring Animal Tracking Data","text":"ezTrack lightweight R package exploring animal tracking data. offers gentle, beginner-friendly workflow go raw telemetry data clean summaries, interactive maps, home range estimates minimal data wrangling. View vignette","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy Tools for Exploring Animal Tracking Data","text":"","code":"# Install development version from GitHub # install.packages(\"devtools\") devtools::install_github(\"taylorbcraft/ezTrack\")"},{"path":[]},{"path":"/index.html","id":"ez_track---clean--standardize-tracking-data","dir":"","previous_headings":"Key Functions","what":"ez_track() - Clean & Standardize Tracking Data","title":"Easy Tools for Exploring Animal Tracking Data","text":"Auto-detects columns id, timestamp, x, y Supports CSV, Excel, shapefiles (.shp), GeoPackages (.gpkg), GeoJSON files Also accepts data.frame, sf, Spatial* objects Removes rows missing duplicate (id, timestamp) combinations Returns clean data frame (optionally) sf object projected WGS84","code":"clean_data <- ez_track(\"my_tracking_file.csv\")"},{"path":"/index.html","id":"ez_summary---quick-data-summary","dir":"","previous_headings":"Key Functions","what":"ez_summary() - Quick Data Summary","title":"Easy Tools for Exploring Animal Tracking Data","text":"Per-ID stats: duration, fixes/day, distance, speed Filters date range Optional HTML report: ez_summary(data, report = TRUE)","code":"ez_summary(clean_data)"},{"path":"/index.html","id":"ez_home_range---estimate-home-ranges","dir":"","previous_headings":"Key Functions","what":"ez_home_range() - Estimate Home Ranges","title":"Easy Tools for Exploring Animal Tracking Data","text":"Supports MCP KDE methods Returns sf polygon(s) Estimate per animal overall population","code":"ranges <- ez_home_range(clean_data, method = \"mcp\", level = 95)"},{"path":"/index.html","id":"ez_map---interactive-mapping-with-leaflet","dir":"","previous_headings":"Key Functions","what":"ez_map() - Interactive Mapping with Leaflet","title":"Easy Tools for Exploring Animal Tracking Data","text":"Visualize tracks, points, home ranges Customize colors, radius, opacity, labels Toggle satellite light basemaps","code":"ez_map(clean_data)"},{"path":"/index.html","id":"ez_latitude_plot---plot-latitude-over-time","dir":"","previous_headings":"Key Functions","what":"ez_latitude_plot() - Plot Latitude Over Time","title":"Easy Tools for Exploring Animal Tracking Data","text":"Creates time series plot latitude (y-axis) timestamp (x-axis) Optionally facets plot animal allows customization x-axis date format break spacing","code":"ez_latitude_plot(clean_data)"},{"path":"/index.html","id":"example-workflow","dir":"","previous_headings":"","what":"Example Workflow","title":"Easy Tools for Exploring Animal Tracking Data","text":"","code":"library(ezTrack)  # Step 1: Import trk <- ez_track(\"tracking.csv\")  # Step 2: Summarize ez_summary(trk)  # Step 3: Home Range hr <- ez_home_range(trk)  # Step 4: Map It ez_map(trk)  # Step 5: Latitude Plot ez_latitude_plot(trk)"},{"path":"/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Easy Tools for Exploring Animal Tracking Data","text":"sf (spatial operations) leaflet (interactive mapping) geosphere (distance travelled calculation) adehabitatHR (home range estimation) readxl (Excel support) knitr, kableExtra, htmltools (HTML reporting) ggplot2 (latitude plotting) Install missing packages using:","code":"install.packages(c(\"sf\", \"leaflet\", \"geosphere\", \"adehabitatHR\", \"readxl\", \"knitr\", \"kableExtra\", \"htmltools\",\"ggplot2\"))"},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Easy Tools for Exploring Animal Tracking Data","text":"MIT License © 2025 Taylor Craft","code":""},{"path":"/index.html","id":"contributing--issues","dir":"","previous_headings":"","what":"Contributing / Issues","title":"Easy Tools for Exploring Animal Tracking Data","text":"Feel free open issue submit pull request. Suggestions welcome!","code":""},{"path":"/reference/ez_home_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Home Ranges for Tracked Individuals or Population — ez_home_range","title":"Estimate Home Ranges for Tracked Individuals or Population — ez_home_range","text":"Computes home range polygons using either Minimum Convex Polygon (MCP) Kernel Density Estimation (KDE), optional date filtering.","code":""},{"path":"/reference/ez_home_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Home Ranges for Tracked Individuals or Population — ez_home_range","text":"","code":"ez_home_range(   data,   method = \"mcp\",   level = 95,   crs = NULL,   population = FALSE,   startDate = NULL,   endDate = NULL )"},{"path":"/reference/ez_home_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Home Ranges for Tracked Individuals or Population — ez_home_range","text":"data data frame `sf` object columns `id`, `timestamp`, `x`, `y`. method Method home range estimation. One `\"mcp\"` (default) `\"kde\"`. level Percentage points include home range (e.g., 95 95%). Default 95. crs Optional CRS project data calculation. NULL, uses EPSG:3857 (Web Mercator). population Logical. TRUE, returns single home range polygon data combined. startDate Optional. `Date` object string (\"YYYY-MM-DD\"). Filters data date. endDate Optional. `Date` object string (\"YYYY-MM-DD\"). Filters data date.","code":""},{"path":"/reference/ez_home_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Home Ranges for Tracked Individuals or Population — ez_home_range","text":"`sf` object home range polygon(s).","code":""},{"path":"/reference/ez_latitude_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Latitude Over Time — ez_latitude_plot","title":"Plot Latitude Over Time — ez_latitude_plot","text":"Creates time series plot latitude (y-axis) timestamp (x-axis), separate lines individual animal. Optionally facets plot animal allows customization x-axis date format break spacing.","code":""},{"path":"/reference/ez_latitude_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Latitude Over Time — ez_latitude_plot","text":"","code":"ez_latitude_plot(   data,   color_palette = \"turbo\",   facet = FALSE,   date_format = NULL,   date_breaks = NULL,   startDate = NULL,   endDate = NULL )"},{"path":"/reference/ez_latitude_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Latitude Over Time — ez_latitude_plot","text":"data data frame `sf` object columns `id`, `timestamp`, `y` (latitude). color_palette Character. Viridis palette option: \"viridis\", \"magma\", \"plasma\", \"inferno\", \"cividis\", \"turbo\". Default \"turbo\". facet Logical. TRUE, creates separate facet panel animal. Default FALSE. date_format Optional. Format date labels x-axis (e.g., \"%b %d\", \"%Y-%m\", \"%H:%M\"). Default automatic. date_breaks Optional. Interval x-axis breaks (e.g., \"1 day\", \"2 weeks\"). Default automatic. startDate Optional. `Date` object string (e.g., \"2023-01-01\"). Filters data date. endDate Optional. `Date` object string (e.g., \"2023-02-01\"). Filters data date.","code":""},{"path":"/reference/ez_latitude_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Latitude Over Time — ez_latitude_plot","text":"ggplot object.","code":""},{"path":"/reference/ez_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Map of Tracking Data — ez_map","title":"Interactive Map of Tracking Data — ez_map","text":"Display animal tracks interactive Leaflet map intuitive styling arguments. Optionally subset data start end date. Supports plotting tracks (lines points) home ranges (POLYGON MULTIPOLYGON). default, points paths colored `id`.","code":""},{"path":"/reference/ez_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Map of Tracking Data — ez_map","text":"","code":"ez_map(   data,   plotPath = TRUE,   plotPoints = TRUE,   pointRadius = 4,   pointColor = \"blue\",   pointOpacity = 0.8,   pointStroke = TRUE,   pointStrokeColor = \"black\",   pathColor = \"blue\",   pathWidth = 2,   pathOpacity = 1,   homeRangeColor = \"blue\",   colorPalette = \"viridis\",   showLabels = TRUE,   startDate = NULL,   endDate = NULL )"},{"path":"/reference/ez_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Map of Tracking Data — ez_map","text":"data data frame `sf` object columns `id`, `timestamp`, `x`, `y`. plotPath Logical, whether draw path lines. Default TRUE. plotPoints Logical, whether draw points. Default TRUE. pointRadius Numeric, size point markers. Default 4. pointColor CSS color string column name color points. Default `\"id\"`. pointOpacity Numeric (0–1), fill opacity points. Default 0.8. pointStroke Logical, whether draw borders around points. Default TRUE. pointStrokeColor Border color points. Default \"black\". pathColor CSS color string column name color paths. Default `\"id\"`. pathWidth Line width paths. Default 2. pathOpacity Numeric (0–1), opacity paths. Default 1. homeRangeColor CSS color string column name color polygon geometries. Default \"blue\". colorPalette Palette use coloring `id` another column. Supports \"viridis\", \"plasma\", \"inferno\", \"magma\", \"cividis\", \"turbo\", \"Set1\". Default \"viridis\". showLabels Logical, show ID + timestamp hover labels. Default TRUE. startDate Optional. `Date` object date string (e.g., \"2021-01-01\"). endDate Optional. `Date` object date string (e.g., \"2021-12-31\").","code":""},{"path":"/reference/ez_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive Map of Tracking Data — ez_map","text":"`leaflet` map object.","code":""},{"path":"/reference/ez_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Animal Tracking Data — ez_summary","title":"Summarize Animal Tracking Data — ez_summary","text":"Calculate basic summary statistics per tracked individual. function useful quickly understanding data coverage, gaps, movement distance animal. following summary statistics returned unique `id`: - `n_fixes`: Number location records - `first_location`: Timestamp first recorded location - `last_location`: Timestamp last recorded location - `tracking_duration_days`: Duration first last fix (days) - `fixes_per_day`: Average number fixes per day - `median_interval_hours`: Median interval fixes (hours) - `max_time_gap_days`: Longest time gap consecutive fixes (days) - `distance_km`: Total distance traveled (kilometers), calculated using Haversine formula - `avg_speed_kmh`: Average speed (km/h), computed distance divided tracking duration hours","code":""},{"path":"/reference/ez_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Animal Tracking Data — ez_summary","text":"","code":"ez_summary(data, startDate = NULL, endDate = NULL, report = FALSE)"},{"path":"/reference/ez_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Animal Tracking Data — ez_summary","text":"data data frame sf object columns `id`, `timestamp`, `x`, `y`. startDate Optional. `Date` object string (e.g., \"2021-01-01\"). Filters data date. endDate Optional. `Date` object string (e.g., \"2021-01-15\"). Filters data date. report Logical. TRUE, opens HTML summary table browser easy copying slides documents.","code":""},{"path":"/reference/ez_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Animal Tracking Data — ez_summary","text":"data frame summary statistics per `id`, HTML table `report = TRUE`.","code":""},{"path":"/reference/ez_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Animal Tracking Data — ez_summary","text":"","code":"if (FALSE) { # \\dontrun{ df <- ez_track(\"tracking_data.csv\") ez_summary(df) ez_summary(df, report = TRUE) } # }"},{"path":"/reference/ez_track.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Clean Tracking Object — ez_track","title":"Create a Clean Tracking Object — ez_track","text":"function imports standardizes tracking data tidy format columns: `id`, `timestamp`, `x`, `y`. supports common input formats including data frames, `sf` `Spatial` objects, file paths CSV, Excel, Shapefiles, GeoPackages, GeoJSON. Optionally returns spatial object projected WGS84 (EPSG:4326).","code":""},{"path":"/reference/ez_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Clean Tracking Object — ez_track","text":"","code":"ez_track(   data,   format = NULL,   tz = \"UTC\",   crs = 4326,   as_sf = TRUE,   id_col = NULL,   time_col = NULL,   x_col = NULL,   y_col = NULL,   verbose = TRUE,   ... )"},{"path":"/reference/ez_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Clean Tracking Object — ez_track","text":"data tracking dataset file path. Accepted types: `data.frame`, `sf`, `Spatial*`, path CSV, XLSX, SHP, GPKG, GeoJSON. format Optional. File format override detection. Choices: \"csv\", \"xlsx\", \"shp\", \"gpkg\", \"geojson\". tz Timezone timestamps. Default \"UTC\". crs EPSG code proj4string input CRS. Default 4326 (WGS84). as_sf Logical. result returned `sf` object? Default TRUE. id_col Name column use ID. NULL, guessed automatically. time_col Name timestamp column. NULL, guessed automatically. x_col Name longitude/X column. NULL, guessed automatically. y_col Name latitude/Y column. NULL, guessed automatically. verbose Logical. TRUE, print details import. Default TRUE. ... Additional arguments passed read function.","code":""},{"path":"/reference/ez_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Clean Tracking Object — ez_track","text":"data.frame `sf` object standardized columns `id`, `timestamp`, `x`, `y`. Missing values duplicate (id, timestamp) rows removed.","code":""},{"path":"/reference/godwit_tracks.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Godwit Tracking Dataset — godwit_tracks","title":"Example Godwit Tracking Dataset — godwit_tracks","text":"dataset godwit tracking data used example ezTrack functions.","code":""},{"path":"/reference/godwit_tracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Godwit Tracking Dataset — godwit_tracks","text":"","code":"data(godwit_tracks)"},{"path":"/reference/godwit_tracks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Godwit Tracking Dataset — godwit_tracks","text":"data frame columns: individual.local.identifier Unique identifier tracked animal timestamp Datetime location fix location.long Longitude coordinate (WGS84) location.lat Latitude coordinate (WGS84)","code":""},{"path":"/reference/godwit_tracks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Godwit Tracking Dataset — godwit_tracks","text":"Movebank","code":""},{"path":"/reference/godwit_tracks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Godwit Tracking Dataset — godwit_tracks","text":"","code":"data(godwit_tracks) ez_summary(godwit_tracks) #> Error in ez_summary(godwit_tracks): Data must contain columns: id, timestamp, x, y ez_home_range(godwit_tracks) #> Registered S3 methods overwritten by 'adehabitatMA': #>   method                       from #>   print.SpatialPixelsDataFrame sp   #>   print.SpatialPixels          sp   #> Error in `[.data.frame`(x, coords): undefined columns selected"}]
